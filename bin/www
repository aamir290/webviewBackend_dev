#!/usr/bin/env node

/**
 * Module dependencies.
 */

//Includes

// Class
const Server = require('../src/infrastructure/Server');
const Application = require('../src/infrastructure/Application');
const LocalSource = require('../src/data/sources/LocalSource');
const DistantSource = require('../src/data/sources/DistantSource');
const ChatBotRepository = require('../src/data/ChatBotRepository');
const ApiRouter = require('../src/infrastructure/routes/ApiRouter');

const GetCategoriesUsecase = require('../src/usecases/GetCategoriesUseCase');
const GetChatBotInCategoryUseCase = require('../src/usecases/GetChatbotInCategoryUseCase');
const SimpleSearchUseCase = require('../src/usecases/SimpleSearchUseCase');
const BeginInteractionUseCase = require('../src/usecases/BeginInteractionUseCase');

//Configuration
const config = require('../config/config.js');


//Functions/utils/middleware
const logger = require('../src/infrastructure/logging/logger')(config);
const requestLoggerFile = require('../src/infrastructure/logging/requestLoggerToFileMiddleware')(config);
const requestLogger = require('../src/infrastructure/logging/requestLoggerMiddleware');

//Initialize components

const localSourceImpl = new LocalSource('data', logger);
const distantSourceImpl = new DistantSource(config, logger);
const chatBotRepositoryImpl = new ChatBotRepository(localSourceImpl, distantSourceImpl, logger);

//Load use case
const useCaseContainer = {};
useCaseContainer.getCategoriesUsecase = GetCategoriesUsecase;
useCaseContainer.getChatbotInCategoryUseCase = GetChatBotInCategoryUseCase;
useCaseContainer.simpleSearchUseCase = SimpleSearchUseCase;
useCaseContainer.beginInteractionUseCase = BeginInteractionUseCase;


const apiRouterImpl = new ApiRouter(useCaseContainer, chatBotRepositoryImpl, logger);
const mainRouter = require('../src/infrastructure/routes/router')(config, requestLoggerFile, requestLogger, apiRouterImpl.apiRouter);

const currentServer = new Server(mainRouter, config, logger);
const searchDirectoryApplication = new Application(currentServer);

logger.debug('%o', config);

//Start Application
searchDirectoryApplication
  .start()
  .then(() => {
    logger.info('Success Launch');
  })
  .catch((error) => {
    logger.error(`Error : ${error}`);
  });
